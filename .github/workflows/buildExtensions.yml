name: Build extensions
on:
  workflow_call:
jobs:
  extensions:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout the source code
          uses: actions/checkout@v4
        - name: Setup Docker
          uses: docker/setup-buildx-action@v3
          with:
            driver: docker
            install: true
        - name: Setup Cross
          uses: actions-rs/cargo@v1
          with:
            command: install
            args: cross --git https://github.com/cross-rs/cross

        - name: Build Extensions
          run: |
                cd extensions
                docker build -t rtf42/build-a3go:windows-so -f ${{ github.workspace }}/extensions/Dockerfile_windows.build .
                docker build -t rtf42/build-a3go:linux-so -f ${{ github.workspace }}/extensions/Dockerfile_linux_x64.build .
                for d in */ ; do
                    d=${d::-1}
                    if [ "$d" == "internal" ]; then
                        continue
                    fi
                    if [ "$d" == "playmusicrs" ]; then
                        continue
                    fi
                    echo "Building $d"
                    docker run --rm -v ${{ github.workspace }}/extensions:/go/work -w /go/work -e GOARCH=amd64 -e CGO_ENABLED=1 rtf42/build-a3go:windows-so  go build -o "./${d}_x64.dll" -buildmode=c-shared -ldflags '-w -s' "./$d"
                    docker run --rm -v ${{ github.workspace }}/extensions:/app -e GOOS=linux -e GOARCH=amd64 -e CGO_ENABLED=1 -e CC=gcc rtf42/build-a3go:linux-so go build -o "./${d}_x64.so" -linkshared -ldflags '-w -s' "./$d"
                    mv ${d}_x64.dll ${d}_x64.so ..
                done
        - name: Build Rust Extensions
          run: |
                    cd extensions
                    for d in */ ; do
                        d=${d::-1}
                        if [ "$d" != "playmusicrs" ]; then
                            continue
                        fi
                        echo "Building $d"
                        cd $d
                        cross build --target x86_64-pc-windows-gnu --release
                        cross build --target i686-pc-windows-gnu --release
                        cross build --target x86_64-unknown-linux-gnu --release
                        cross build --target i686-unknown-linux-gnu --release
                        mv target/x86_64-pc-windows-gnu/release/*.dll ${{ github.workspace }}/${d}_x64.dll
                        mv target/x86_64-unknown-linux-gnu/release/*.so ${{ github.workspace }}/${d}_x64.so
                        mv target/i686-pc-windows-gnu/release/*.dll ${{ github.workspace }}/${d}.dll
                        mv target/i686-unknown-linux-gnu/release/*.so ${{ github.workspace }}/${d}.so
                        cd ..
                    done
        - name: upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: extensions
            path: |
              *.so
              *.dll
