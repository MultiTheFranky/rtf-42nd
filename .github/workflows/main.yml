name: "Main Workflow"

permissions:
    contents: write

on:
    push:
        branches:
            - "main"

jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the source code
              uses: actions/checkout@master
            - name: Validate SQF
              run: python3 tools/sqf_validator.py
            - name: Validate Config
              run: python3 tools/config_style_checker.py
            - name: Check for BOM
              uses: arma-actions/bom-check@master
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the source code
              uses: actions/checkout@master
            - name: Lint (sqflint)
              uses: arma-actions/sqflint@master
              continue-on-error: true # No failure due to many false-positives
    version:
        name: Generate version
        permissions: write-all
        runs-on: ubuntu-latest
        needs: [validate, lint]
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                node-version: "18"
            - name: Execute version generator
              # if the author is a bot no version is generated
              if: github.actor != 'github-actions[bot]'
              run: |
                cd ${{ github.workspace }}/tools/version_generator
                npm install
                VERSION=$(node index.js --beta --commit)
                echo "VERSION=$VERSION" >> $GITHUB_ENV
            - name: PR to merge version to main branch
            # if the author is a bot no version is generated
              if: github.actor != 'github-actions[bot]'
              uses: peter-evans/create-pull-request@v5
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "Update version to ${{ env.VERSION }}"
                title: "Update version to ${{ env.VERSION }}"
                body: "Update version to ${{ env.VERSION }}"
                branch: "version-${{ env.VERSION }}"
                base: "main"
                branch-suffix: random
                delete-branch: true
                labels: |
                    automerge
                    automated pr
