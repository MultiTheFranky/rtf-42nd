name: "RELEASE"

permissions:
    contents: write

on:
    push:
        tags:
            - "v*"

concurrency:
    group: "release"
    cancel-in-progress: true

jobs:
    validate:
        uses: ./.github/workflows/validate.yml
    lint:
        uses: ./.github/workflows/lint.yml
    check:
        uses: ./.github/workflows/check.yml
    hemtt:
        name: Build with HEMTT
        permissions: write-all
        runs-on: windows-latest
        needs: [validate, lint, check]
        steps:
            - uses: ./.github/workflows/base.yml
            - name: Execute version generator
              if: ${{ contains(github.ref_name,'rc') == false }}
              run: |
                cd ${{github.workspace}}/tools/version_generator
                npm install
                VERSION=$(node index.js )
                echo "VERSION=$VERSION" >> $GITHUB_ENV
            - name: Execute version generator
              if: ${{ contains(github.ref_name,'rc') == true }}
              run: |
                  cd ${{github.workspace}}/tools/version_generator
                  npm install
                  VERSION=$(node index.js --beta)
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
            - name: Setup HEMTT
              uses: arma-actions/hemtt@v1
            - name: Run HEMTT release
              run: hemtt release
            - name: Rename build folder
              run: mv ${{ github.workspace }}/releases/rtf42-latest.zip ${{ github.workspace }}/releases/@rtf42.zip
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: rtf42-${{ env.VERSION }}
                  path: ${{ github.workspace }}/releases/@rtf42.zip
            - name: Setup steamcmd
              id: steamcmd
              uses: CyberAndrii/setup-steamcmd@v1

            - name: Generate auth code
              id: generate
              uses: CyberAndrii/steam-totp@v1
              with:
                  shared_secret: ${{ secrets.STEAM_SHARE_SECRET }}
              continue-on-error: true

            - name: Unzip builded mod
              run: unzip -o ${{ github.workspace }}/releases/@rtf42.zip -d ${{ github.workspace }}/releases
              continue-on-error: true

            - name: Upload mod
              uses: MultiTheFranky/action-release-to-steam-ws@0.0.2
              if: ${{ contains(github.ref_name,'rc') == false }}
              with:
                  steamcmd_path: ${{ steps.steamcmd.outputs.directory }}
                  file_id: "${{ secrets.MOD_ID }}"
                  username: "${{ secrets.STEAM_USERNAME }}"
                  password: "${{ secrets.STEAM_PASSWORD }}"
                  otp: "${{ steps.generate.outputs.code }}"
                  path: "${{ github.workspace }}/releases/@rtf42"
                  name: "rtf42"
                  change_notes_title: "${{ github.event.release.name }}"
                  change_notes: "${{ github.event.release.body }}"
              continue-on-error: true

            - name: Upload beta mod
              uses: MultiTheFranky/action-release-to-steam-ws@0.0.2
              if: ${{ contains(github.ref_name,'rc') == true }}
              with:
                  steamcmd_path: ${{ steps.steamcmd.outputs.directory }}
                  file_id: "${{ secrets.BETA_MOD_ID }}"
                  username: "${{ secrets.STEAM_USERNAME }}"
                  password: "${{ secrets.STEAM_PASSWORD }}"
                  otp: "${{ steps.generate.outputs.code }}"
                  path: "${{ github.workspace }}/releases/@rtf42"
                  name: "rtf42"
                  change_notes_title: "${{ github.event.release.name }}"
                  change_notes: "${{ github.event.release.body }}"
              continue-on-error: true

            - name: PR to merge version to main branch
              uses: peter-evans/create-pull-request@v5
              if: ${{ contains(github.ref_name,'rc') == false }}
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                commit-message: "Update version to ${{ env.VERSION }}"
                title: "Update version to ${{ env.VERSION }}"
                body: "Update version to ${{ env.VERSION }}"
                branch: "version-${{ env.VERSION }}"
                base: "main"
                branch-suffix: random
                delete-branch: true
                labels: |
                    automerge
                    automated pr

