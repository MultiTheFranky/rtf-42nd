name: "RELEASE"

permissions:
    contents: write

on:
    push:
        tags:
            - "v*"

concurrency:
    group: "release"
    cancel-in-progress: true

jobs:
    validate:
        uses: ./.github/workflows/validate.yml
    lint:
        uses: ./.github/workflows/lint.yml
    check:
        uses: ./.github/workflows/check.yml
    extensions:
        name: Extensions
        uses: ./.github/workflows/buildExtensions.yml

    hemtt:
        name: Build with HEMTT
        permissions: write-all
        runs-on: windows-latest
        needs: [validate, lint, check, extensions]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: ./.github/workflows/base
              with:
                  CDN_URL: ${{ secrets.CDN_URL }}
                  TOLGEE_API_KEY: ${{ secrets.TOLGEE_API_KEY }}
                  TOLGEE_URL: ${{ secrets.TOLGEE_URL }}
            - name: Retrieve base artifact
              uses: actions/download-artifact@v4
              with:
                  name: extensions
            - name: Execute version generator
              if: ${{ contains(github.ref_name,'rc') == false }}
              run: |
                  cd ${{github.workspace}}\\tools\\version_generator
                  npm install
                  $VERSION=$(node index.js )
                  echo "VERSION=$VERSION" >> $env:GITHUB_ENV
            - name: Execute version generator
              if: ${{ contains(github.ref_name,'rc') == true }}
              run: |
                  cd ${{github.workspace}}\\tools\\version_generator
                  npm install
                  $VERSION=$(node index.js --beta)
                  echo "VERSION=$VERSION" >> $env:GITHUB_ENV
            - uses: arma-actions/arma3-tools@master
              with:
                  toolsUrl: ${{ secrets.CDN_URL }}/arma3tools.zip
            - name: Setup HEMTT
              uses: arma-actions/hemtt@v1
            - name: Run HEMTT release
              run: hemtt release
            - name: Rename build folder
              run: mv ${{ github.workspace }}\\releases\\rtf42-latest.zip ${{ github.workspace }}\\releases\\@rtf42.zip
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: rtf42-${{ env.VERSION }}
                  path: ${{ github.workspace }}\\releases\\@rtf42.zip
            - name: Setup steamcmd
              id: steamcmd
              uses: CyberAndrii/setup-steamcmd@v1

            - name: Generate auth code
              id: generate
              uses: CyberAndrii/steam-totp@v1
              with:
                  shared_secret: ${{ secrets.STEAM_SHARE_SECRET }}
              continue-on-error: true

            - name: Unzip builded mod
              run: unzip -o ${{ github.workspace }}\\releases\\@rtf42.zip -d ${{ github.workspace }}\\releases
              continue-on-error: true

            - name: Build Changelog
              id: github_release
              uses: mikepenz/release-changelog-builder-action@v4
              env:
                  commitMode: true
                  configurationJson: |
                      {
                        "template": "#{{CHANGELOG}}",
                        "categories": [
                          {
                              "title": "## Feature",
                              "labels": ["feat", "feature"]
                          },
                          {
                              "title": "## Fix",
                              "labels": ["fix", "bug"]
                          },
                          {
                              "title": "## Other",
                              "labels": []
                          }
                        ],
                        "label_extractor": [
                          {
                            "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                            "target": "$1"
                          }
                        ],
                      }
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload mod
              uses: MultiTheFranky/action-release-to-steam-ws@0.0.3
              if: ${{ contains(github.ref_name,'rc') == false }}
              with:
                  steamcmd_path: ${{ steps.steamcmd.outputs.directory }}
                  file_id: "${{ secrets.MOD_ID }}"
                  username: "${{ secrets.STEAM_USERNAME }}"
                  password: "${{ secrets.STEAM_PASSWORD }}"
                  otp: "${{ steps.generate.outputs.code }}"
                  path: "${{ github.workspace }}\\releases\\@rtf42"
                  name: "rtf42"
                  change_notes_title: "rtf42-${{ env.VERSION }}"
                  change_notes: "${{steps.github_release.outputs.changelog}}"
              continue-on-error: true

            - name: Upload beta mod
              uses: MultiTheFranky/action-release-to-steam-ws@0.0.3
              if: ${{ contains(github.ref_name,'rc') == true }}
              with:
                  steamcmd_path: ${{ steps.steamcmd.outputs.directory }}
                  file_id: "${{ secrets.BETA_MOD_ID }}"
                  username: "${{ secrets.STEAM_USERNAME }}"
                  password: "${{ secrets.STEAM_PASSWORD }}"
                  otp: "${{ steps.generate.outputs.code }}"
                  path: "${{ github.workspace }}\\releases\\@rtf42"
                  name: "rtf42"
                  change_notes_title: "rtf42-${{ env.VERSION }}"
                  change_notes: "${{steps.github_release.outputs.changelog}}"
              continue-on-error: true

            - name: PR to merge version to main branch
              uses: peter-evans/create-pull-request@v6
              if: ${{ contains(github.ref_name,'rc') == false }}
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "Update version to ${{ env.VERSION }}"
                  title: "Update version to ${{ env.VERSION }}"
                  body: "Update version to ${{ env.VERSION }}\nChanges: ${{steps.github_release.outputs.changelog}}"
                  branch: "version-${{ env.VERSION }}"
                  base: "main"
                  branch-suffix: random
                  delete-branch: true
                  labels: |
                      automerge
                      automated pr
